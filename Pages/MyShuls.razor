@page "/myshuls"

@inject NavigationManager NavigationManager
@using Super_Jew_2._0.Backend.Services
@inject Super_Jew_2._0.Backend.Services.ShulService ShulService
@using Super_Jew_2._0.Backend
@using Super_Jew_2._0.Backend.ShulServices
@inject UserService UserService



<h3><span class="myshuls-title">MyShuls</span>&trade;</h3>


@if (shulList != null)
{
    <div class="container">
        <div class="row">
            @foreach (var shul in shulList)
            {
                <div class="col-sm-4">
                    <ShulCard CurrentShul="@shul"
                              IsFullCard="@IsShulExpanded(shul.ShulName)"
                              OnCardClick="() => HandleCardClick(shul.ShulName)" />
                </div>
            }
        </div>
    </div>
}

<button class="button-92" role="button" @onclick="NavigateToAddShuls">AddMore</button>


@code {
    private List<Shul> shulList; 
    private string expandedShulName;

    private async Task RefreshUserShuls()
    {
        var currentUser = UserService.CurrentUser; 
        if (currentUser != null)
        {
            currentUser = ShulService.GetFollowedShulsForUser(currentUser.Username, UserService.UserPassword);
            UserService.SetCurrentUser(currentUser); // Update the current user in UserService
            shulList = currentUser.FollowedShuls;
        }
    }

    protected override async Task OnParametersSetAsync()
    {
        await RefreshUserShuls();
    }

    private void HandleCardClick(string shulName)
    {
        expandedShulName = shulName == expandedShulName ? null : shulName;
    }

    private bool IsShulExpanded(string shulName)
    {
        return shulName == expandedShulName;
    }
    
    private void NavigateToAddShuls()
    {
        NavigationManager.NavigateTo("/addshuls"); 
    }
}


